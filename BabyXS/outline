* XS links Perl and C
* XS is C functions/macros provided by Perl headers
* XS is also XS-preprocessesor directives

* "Baby Perl" is what new Perl programmer write (no map/grep, no references etc)
* "Full XS" is powerful but is lots to learn
* "Baby XS" looks like C, behaves like Perl

* "Baby XS":
=> ignores typemaps
=> uses Perl datatype functions from perlguts
=> ignores most of the XSpp commands
=> ignores stack macros
=> avoids issues of "mortalization"
=> uses a Perl-level function wrapper to munge input/output if needed

* Typemaps: int, double, char*, SV*, AV*, HV*
* Input: int, double, char*, SV*
* Return: == Typemaps

*SVs
Create:
           SV*  newSViv(IV);
           SV*  newSVuv(UV);
           SV*  newSVnv(double);
           SV*  newSVpvf(const char*, ...);
           SV*  newSVsv(SV*);

also sv_set* functions.

Access:
           SvIV(SV*)
           SvUV(SV*)
           SvNV(SV*)
           SvPV(SV*, STRLEN len)
           SvPV_nolen(SV*)

read more in perlguts
